-- Vehicle Dimension
CREATE TABLE dim_vehicle (
    vehicle_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    vehicle_type VARCHAR2(30),
    capacity NUMBER -- in tons
);

-- Driver Dimension
CREATE TABLE dim_driver (
    driver_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    driver_name VARCHAR2(50),
    license_type VARCHAR2(20)
);

-- Location Dimension
CREATE TABLE dim_location (
    location_id NUMBER PRIMARY KEY,
    city VARCHAR2(50),
    state VARCHAR2(50)
);


-- Logistics Fact Table (links to vehicle, driver, location)
CREATE TABLE fact_logistics (
    trip_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    vehicle_id NUMBER,
    driver_id NUMBER,
    source_location_id NUMBER,
    destination_location_id NUMBER,
    distance_travelled NUMBER, -- in kilometers
    cargo_weight NUMBER,       -- in tons
    FOREIGN KEY (vehicle_id) REFERENCES dim_vehicle(vehicle_id),
    FOREIGN KEY (driver_id) REFERENCES dim_driver(driver_id),
    FOREIGN KEY (source_location_id) REFERENCES dim_location(location_id),
    FOREIGN KEY (destination_location_id) REFERENCES dim_location(location_id)
);


-- Trigger to insert a trip record when a new driver is added
CREATE OR REPLACE TRIGGER trg_insert_trip_after_driver
AFTER INSERT ON dim_driver
FOR EACH ROW
DECLARE
    v_vehicle_id dim_vehicle.vehicle_id%TYPE;
    v_source_id dim_location.location_id%TYPE;
    v_dest_id dim_location.location_id%TYPE;
BEGIN
    -- Random vehicle
    SELECT vehicle_id INTO v_vehicle_id FROM (
        SELECT vehicle_id FROM dim_vehicle ORDER BY DBMS_RANDOM.VALUE
    ) WHERE ROWNUM = 1;

    -- Random source
    SELECT location_id INTO v_source_id FROM (
        SELECT location_id FROM dim_location ORDER BY DBMS_RANDOM.VALUE
    ) WHERE ROWNUM = 1;

    -- Random destination (different from source)
    SELECT location_id INTO v_dest_id FROM (
        SELECT location_id FROM dim_location WHERE location_id != v_source_id ORDER BY DBMS_RANDOM.VALUE
    ) WHERE ROWNUM = 1;

    INSERT INTO fact_logistics (vehicle_id, driver_id, source_location_id, destination_location_id, distance_travelled, cargo_weight)
    VALUES (v_vehicle_id, :NEW.driver_id, v_source_id, v_dest_id, ROUND(DBMS_RANDOM.VALUE * 1000, 2), ROUND(DBMS_RANDOM.VALUE * 20, 2));
END;
/


-- Vehicles
INSERT INTO dim_vehicle (vehicle_type, capacity) VALUES ('Truck', 15);
INSERT INTO dim_vehicle (vehicle_type, capacity) VALUES ('Van', 5);
INSERT INTO dim_vehicle (vehicle_type, capacity) VALUES ('Container', 20);
INSERT INTO dim_vehicle (vehicle_type, capacity) VALUES ('Mini Truck', 8);

-- Locations
INSERT INTO dim_location (location_id, city, state) VALUES (1, 'Delhi', 'Delhi');
INSERT INTO dim_location (location_id, city, state) VALUES (2, 'Mumbai', 'Maharashtra');
INSERT INTO dim_location (location_id, city, state) VALUES (3, 'Chennai', 'Tamil Nadu');
INSERT INTO dim_location (location_id, city, state) VALUES (4, 'Kolkata', 'West Bengal');
INSERT INTO dim_location (location_id, city, state) VALUES (5, 'Bangalore', 'Karnataka');

-- Drivers (this will trigger trip entries)
INSERT INTO dim_driver (driver_name, license_type) VALUES ('Ramesh Singh', 'Heavy');
INSERT INTO dim_driver (driver_name, license_type) VALUES ('Amit Kumar', 'Medium');
INSERT INTO dim_driver (driver_name, license_type) VALUES ('Sunil Sharma', 'Heavy');
INSERT INTO dim_driver (driver_name, license_type) VALUES ('Vijay Patel', 'Light');
INSERT INTO dim_driver (driver_name, license_type) VALUES ('Deepak Mehra', 'Heavy');


SELECT * FROM dim_vehicle;
SELECT * FROM dim_driver;
SELECT * FROM dim_location;
SELECT * FROM fact_logistics;



-- 1. ROLL-UP: Total trips grouped by vehicle type
SELECT dv.vehicle_type, COUNT(fl.trip_id) AS total_trips
FROM fact_logistics fl
JOIN dim_vehicle dv ON fl.vehicle_id = dv.vehicle_id
GROUP BY dv.vehicle_type;


-- 2. DRILL-DOWN: Total cargo per city
SELECT dl.city, SUM(fl.cargo_weight) AS total_cargo
FROM fact_logistics fl
JOIN dim_location dl ON fl.destination_location_id = dl.location_id
GROUP BY dl.city;


-- 3. SLICE: Trips handled by drivers with license type = 'Heavy'
SELECT fl.trip_id, dd.driver_name, dd.license_type, fl.cargo_weight
FROM fact_logistics fl
JOIN dim_driver dd ON fl.driver_id = dd.driver_id
WHERE dd.license_type = 'Heavy';


-- 4. DICE: Trips by Heavy license drivers, using trucks, in Karnataka
SELECT fl.trip_id, dd.driver_name, dv.vehicle_type, dl.state, fl.distance_travelled
FROM fact_logistics fl
JOIN dim_driver dd ON fl.driver_id = dd.driver_id
JOIN dim_vehicle dv ON fl.vehicle_id = dv.vehicle_id
JOIN dim_location dl ON fl.destination_location_id = dl.location_id
WHERE dd.license_type = 'Heavy'
  AND dv.vehicle_type = 'Truck'
  AND dl.state = 'Karnataka';


-- 5. PIVOT: Number of trips per state for different vehicle types

SELECT
    dl.state,
    SUM(CASE WHEN dv.vehicle_type = 'Truck' THEN 1 ELSE 0 END) AS Truck_Trips,
    SUM(CASE WHEN dv.vehicle_type = 'Van' THEN 1 ELSE 0 END) AS Van_Trips,
    SUM(CASE WHEN dv.vehicle_type = 'Container' THEN 1 ELSE 0 END) AS Container_Trips
FROM fact_logistics fl
JOIN dim_vehicle dv ON fl.vehicle_id = dv.vehicle_id
JOIN dim_location dl ON fl.destination_location_id = dl.location_id
GROUP BY dl.state;
